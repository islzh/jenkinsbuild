#!/bin/bash

set -o monitor
set -o nounset

main () {
    #
    # CONFIGURATIONS START
    #
    local JENKINS_URL=${JENKINS_URL-}
    local JENKINS_USER=${JENKINS_USER-}
    local JENKINS_TOKEN=${JENKINS_TOKEN-}
    local JENKINS_JOB_NAME=${JENKINS_JOB_NAME-}
    local JENKINS_SRC_DIR=${JENKINS_SRC_DIR-'.'}
    #
    # CONFIGURATIONS END
    #
    local daemon_only
    local version="0.2.0"
    local lupdate="2022-05-05"
    while test $# -ge 1
    do
        case $1 in
        -d|--daemon-only)
            daemon_only=1
            shift
            ;;
        -h|-\?|--help)
            ShowHelp
            exit 0
            ;;
        *)
            err "invalid argument: $1"
            ;;
        esac
    done
    GitDaemon
    CallApi
}

GitDaemon () {
    ps -afW | grep -q 'git-daemon\.exe' && return
    git daemon --export-all --enable=upload-archive \
        --base-path="$JENKINS_SRC_DIR" &
    test "${daemon_only-}" && exit
}

CallApi () {
    git branch -f jenkinsbuild
    curl -sS -X POST \
        -u $JENKINS_USER:$JENKINS_TOKEN \
        $JENKINS_URL/job/$JENKINS_JOB_NAME/build
}

ShowHelp () {
cat <<EOF
Use without argument to build current branch in a specific Jenkins job.
Use with -d to start git-deamon only.

Following steps are required to be done before first use.

1. In Jenkins job, set git branch to build to "jenkinsbuild".
2. Set following environment variables.
    JENKINS_URL: Jenkins URL such as http://example.com:8080
    JENKINS_USER: Jenkins user name
    JENKINS_TOKEN: API token of JENKINS_USER
    JENKINS_JOB_NAME: Name of the job to build
    JENKINS_SRC_DIR: Directory of source code to build from

version: $version
lastupdated: $lupdate
author: johnny-appleseed <liuzhaohui@inspur.com>
EOF
}

err () {
    local msg=${1-"unspecific error"}
    >&2 printf "error: %s\n" "$1"
    shift
    test $# -gt 0 && >&2 printf "%s\n" "$@"
    exit 1
}

main "$@"
